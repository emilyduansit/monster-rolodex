{"version":3,"sources":["component/card/card.jsx","component/card-list/card-list.jsx","component/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","alt","src","monster","id","name","email","CardList","className","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,G,kBAAO,SAACC,GACjB,OAAO,sBAAKC,MAAM,iBAAX,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,EAAW,SAAAR,GAAK,OACzB,qBAAKS,UAAU,YAAf,SACKT,EAAMI,QAAQM,KAAK,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCHlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAJ,UAAU,SACVK,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BCG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAEIC,MAAQ,CACZb,QAAU,GACVc,YAAa,IALD,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAS,EAAKC,SAAS,CAACpB,QAAQmB,S,+BAI9B,IAAD,SAC2BE,KAAKR,MAA/Bb,EADD,EACCA,QAAUc,EADX,EACWA,YACZQ,EAAiBtB,EAAQuB,QAAQ,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClG,OACE,sBAAKnB,UAAU,MAAf,UACE,iDACC,cAAC,EAAD,CACAG,YAAY,UACZC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAU5B,QAASsB,W,GA1BTO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52baf58c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => {\r\n    return <div class='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n}","import React from 'react';\r\nimport './card-list.style.css'\r\nimport {Card} from '../card/card.jsx'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monster.map( monster =>(\r\n            <Card key={monster.id} monster = {monster}></Card>\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n    <input\r\n    className='search' \r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange} \r\n    />\r\n);","import { Component } from 'react';\nimport './App.css';\nimport {CardList} from './component/card-list/card-list'\nimport {SearchBox} from './component/search-box/search-box.jsx'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n   this.state = {\n    monster : [],\n    searchField :''\n   };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(data => {this.setState({monster:data})});\n    \n  }\n\n  render() {\n    const { monster , searchField } = this.state;\n    const filterMonsters = monster.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n         <SearchBox  \n         placeholder='monster'    \n         handleChange={e=>this.setState({searchField: e.target.value})}\n        />\n        <CardList monster={filterMonsters}></CardList>\n       \n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}